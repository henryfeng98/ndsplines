# Azure Pipelines configuration
#
# For now we use a single stage and single job (copied for multiple OS/Python
# version combinations) with steps for installing dependencies, building and
# installing the ndsplines package, running the tests, and generating a code
# coverage report.
#
# References:
#   https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema
#   https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/pools-queues
#   https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks

# Run the pipeline for commits to master
trigger:
  branches:
    include:
      - master
# TODO add a rule for tags/releases (e.g. `tags: include: 'v*'` for v1.0.0 type tags)

# Run the pipeline for PRs against master
pr:
  autoCancel: true
  branches:
    include:
      - master

# Omitting stages/jobs hierarchy items because there's only one of each. The
# matrix strategy generates copies of the job spec below for different
# combinations of OS/Python version.
strategy:
  matrix:
    Linux_Py36:
      imageName: 'ubuntu-16.04'
      python.version: '3.6'
    Windows_Py36:
      imageName: 'vs2017-win2016'
      python.version: '3.6'
    Mac_Py36:
      imageName: 'macOS-10.13'
      python.version: '3.6'
    Linux_Py37:
      imageName: 'ubuntu-16.04'
      python.version: '3.7'
    Windows_Py37:
      imageName: 'vs2017-win2016'
      python.version: '3.7'
    Mac_Py37:
      imageName: 'macOS-10.13'
      python.version: '3.7'

# Grab an agent from the pool by image name specified by the matrix above
pool:
  vmImage: '$(imageName)'

# Steps to run in each job
steps:

# https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/tool/use-python-version
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
    addToPath: true
  displayName: 'Use Python $(python.version)'

# TODO install from requirements-dev.txt?
- script: |
    python -m pip install --upgrade pip
    python -m pip install -r requirements.txt
    python -m pip install pytest pytest-azurepipelines pytest-cov pandas
    python -m pip list
  displayName: 'Install dependencies'

- script: |
    python -m pip install . -v
  displayName: 'Build and install'

- script: |
    pytest -sv --cov ndsplines tests/
  displayName: 'Test'

- script: |
    bash <(curl -s https://codecov.io/bash) -t $(CODECOV_TOKEN)
  displayName: 'Upload coverage report'
  condition: eq('Job Linux_Py37', variables['Agent.JobName'])
